<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vm="clr-namespace:DesktopDevelopment.ViewModels"
                    xmlns:vms="clr-namespace:DesktopDevelopment.ViewModels.Single"
                    xmlns:vmm="clr-namespace:DesktopDevelopment.ViewModels.Many"
                    xmlns:vw="clr-namespace:DesktopDevelopment.Views"
                    xmlns:vws="clr-namespace:DesktopDevelopment.Views.Single"
                    xmlns:vwm="clr-namespace:DesktopDevelopment.Views.Many">


    <!-- Single View -->
    <DataTemplate DataType="{x:Type vms:CustomerViewModel}">
        <vws:CustomerView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vms:CategoryViewModel}">
        <vws:CategoryView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vms:ProductViewModel}">
        <vws:ProductView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vms:SupplierViewModel}">
        <vws:SupplierView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vms:PromotionViewModel}">
        <vws:PromotionView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vms:EmployeeViewModel}">
        <vws:EmployeeView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vms:UserRoleViewModel}">
        <vws:UserRoleView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vms:CustomersReviewViewModel}">
        <vws:CustomerReviewView/>
    </DataTemplate>


    <!-- Many Views -->
    <DataTemplate DataType="{x:Type vmm:ProductsViewModel}">
        <vwm:ProductsView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vmm:CustomersViewModel}">
        <vwm:CustomersView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vmm:EmployeesViewModel}">
        <vwm:EmployeesView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vmm:CategoriesViewModel}">
        <vwm:CategoriesView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vmm:ShipmentMethodsViewModel}">
        <vwm:ShipmentMethodsView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vmm:OrderStatusViewModel}">
        <vwm:OrderStatusView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vmm:PaymentMethodsViewModel}">
        <vwm:PaymentMethodsView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vmm:UserRolesViewModel}">
        <vwm:UserRoleView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vmm:TransactionsViewModel}">
        <vwm:TransactionsView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vmm:OrdersViewModel}">
        <vwm:OrdersView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vmm:RepairTicketsViewModel}">
        <vwm:RepairTicketsView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vmm:PromotionsViewModel}">
        <vwm:PromotionsView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vmm:CustomersReviewsViewModel}">
        <vwm:CustomersReviewsView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vmm:ServicesOfferedViewModel}">
        <vwm:ServicesOfferedView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vmm:OrderDetailsViewModel}">
        <vwm:OrderDetailsView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vmm:SuppliersViewModel}">
        <vwm:SuppliersView/>
    </DataTemplate>

    <Style x:Key="MainHCCStyle" TargetType="{x:Type HeaderedContentControl}">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>

                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <!-- 
        This template ensures that content of a HeaderedContentControl 
        fills the available vertical space. 
        -->
                <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                    <DockPanel>
                        <ContentPresenter 
              DockPanel.Dock="Top"
              ContentSource="Header" 
              ContentTemplate="{TemplateBinding HeaderTemplate}" 
              />
                        <ContentPresenter 
              ContentSource="Content" 
              ContentTemplate="{TemplateBinding ContentTemplate}" 
              />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
  This style ensures that the borders in the main window are consistent.
  -->
    <Style x:Key="MainBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="WhiteSmoke" />
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>

    <!--
  This template explains how to render the list of commands on the top
  side in the main window (the 'Control Panel' area).
  -->
    <DataTemplate x:Key="CommandsTemplate">
        <ItemsControl IsTabStop="False" ItemsSource="{Binding}" Margin="6,2">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal" ItemWidth="Auto" ItemHeight="Auto"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Button Command="{Binding Path=Command}" Margin="6" Padding="3" Background="{Binding Color}" MinWidth="85" Height="70">
                        <Button.Content>
                            <StackPanel Orientation="Vertical" HorizontalAlignment="Center">
                                <Image Source="{Binding Icon}" Width="28" Height="28" />
                                <TextBlock Text="{Binding DisplayName}" HorizontalAlignment="Center" TextElement.Foreground="White"/>
                            </StackPanel>
                        </Button.Content>
                    </Button>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>

    <!-- 
  This template explains how to render 
  a tab item with a close button.
  -->
    <DataTemplate x:Key="ClosableTabItemTemplate">
        <DockPanel Width="auto" TextElement.FontSize="16">
            <Button 
        Command="{Binding Path=CloseCommand}"
        Content="X"
        Cursor="Hand"
        DockPanel.Dock="Right"
        Focusable="False"
        FontFamily="Courier" 
        FontSize="9"
        FontWeight="Bold"  
        Margin="5,0,0,0"
        Padding="0,2,0,0"
        VerticalContentAlignment="Center"
        BorderBrush="Transparent"
        Width="20" 
        Height="20" 
        />
            <ContentPresenter 
        Content="{Binding Path=DisplayName}" 
        VerticalAlignment="Center" 
        />
        </DockPanel>
    </DataTemplate>

    <!--
  This template explains how to render the 'Workspace' content area in the main window.
  -->
    <DataTemplate x:Key="WorkspacesTemplate">
        <TabControl 
      IsSynchronizedWithCurrentItem="True" 
      ItemsSource="{Binding}" 
      ItemTemplate="{StaticResource ClosableTabItemTemplate}"
      Margin="4"
      />
    </DataTemplate>


</ResourceDictionary>